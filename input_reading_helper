// place this side by side with "in" to understand the input better, or to make your own. Alternatively just run the program and hope that you don't make a mistake because otherwise you have to restart. I did put helpful prompt statements.
Current "in" is based on the Gen 2-5 type chart. Other rules will go off of gen 4, as that is the game that I played only recently in 2021, and I enjoyed it. :)
To make this useful, compile the program and run it as you normally would, but add "< in" if "in" is in the same directory to have it use stdin for you. You'll also want to turn wrap-around ior word wrap off if you can.
[line 1 of input starts on line 5 in this file]
Super-effective multiplier (represented as 2 on most type charts)
Not very effective multiplier (represented as 0.5 usually)
Standard effect multiplier (represented as 1 or an empty box)
No effect multipler (represented as 0) (No effect and standard are for hacks if you so desire)
How many types there are (we'll call it TYPE_NUM for later) (17 plus Fairy is 18 but Fairy was introduced in gen 6 so it's not in the sample input)
The first type
The second type
The third type
...
...
...
...
...
...
...
...
...
...
...
...
...
The 17th type (for TYPE_NUM=17, the last type) etc.
The types that the first type is super effective against, space-delimited and case-sensitive to the types that you typed in earlier
The types that the first type is not very effective against, space-delimited and case-sensitive to the types that you typed in earlier
The types that the first type has no effect against, space-delimited and case-sensitive to the types that you typed in earlier
The types that the second type is super effective against, space-delimited and case-sensitive to the types that you typed in earlier
The types that the second type is not very effective against, space-delimited and case-sensitive to the types that you typed in earlier
The types that the second type has no effect against, space-delimited and case-sensitive to the types that you typed in earlier
... [If a type has no no-effect types like Steel, then put a blank line there]
... [again make sure that the types match the case of when you put it earlier]
... [so yeah make sure that each type takes up exactly 3 lines]
... [also make sure that TYPE_NUM< ~2e9 because I use 32-bit ints here]
... skip a few lines... [line 74 in "in" is line 38 here] and we have just finished establishing the typing.
